title: Auto validated tabular data
---
intro: Auto validation means you'll be the first to know if a change in your data is going to cause a problem. Learn how to incorporate autovalidation into your workflow.
---
body:

Running continuous checks on data provides regular feedback and contributes to better data quality as errors can be flagged and fixed early on.

In this section, you will learn how to setup automatic tabular data validation using goodtables, so your data is validated every time it's updated. Although not strictly necessary, it's useful to [know about Data Packages and Table Schema](/field-guide/well-packaged-datasets) before proceeding, as they allow you to describe your data in more detail, allowing more advanced validations.

We will show how to set up automated tabular data validations for data published on:
 1. [CKAN](https://ckan.org/), an open source platform for publishing data in the open, that makes it easy to discover, use and share data;
 2. [GitHub](https://github.com/), a web platform for collaborating on projects as well as publishing, sharing and storing resources, such as data files;
 3. [Amazon S3](https://aws.amazon.com/s3/), a data storage service by Amazon.

 These are the storage solutions we officially support. However, even if you publish your data somewhere else, you can still implement automatic data validation, it'll just require some technical knowledge. [Find out how to set up a standalone goodtables instance](#).


## 1. CKAN

!! [CKAN](https://ckan.org/) is an open source platform for publishing data online. It is widely used across the planet, including by the federal governments of the USA, United Kingdom, Brazil, and others.

To automatically validate tabular data on CKAN, enable the [ckanext-validation](https://github.com/frictionlessdata/ckanext-validation) extension, which uses goodtables to run continuous checks on your data. The [ckanext-validation](https://github.com/frictionlessdata/ckanext-validation) extension:

* adds a badge next to each dataset showing the status of their validation (valid or invalid), and
* allows users to access the validation report, making it possible for errors to be identified and fixed.

![](figure-1.png)
*Figure 1: annotated in red, automated validation checks on datasets in CKAN*

The installation and usage instructions for [ckanext-validation](https://github.com/frictionlessdata/ckanext-validation) extension are available on [Github](https://github.com/frictionlessdata/ckanext-validation).


## 2. GitHub

If your data is hosted on GitHub, you can use goodtables web service to automatically validate it on every change. Find a detailed set of instructions [here](https://docs.goodtables.io/getting_started/github.html).

## 3. Amazon S3

If your data is hosted on Amazon S3, you can use [goodtables web service](https://goodtables.io) to automatically validate it on every change. Find a detailed set of instructions [here](https://docs.goodtables.io/getting_started/s3.html).

## Set up a standalone instance of goodtables

If none of the options above are relevant for you i.e. because you use a different data publishing and storage platform, you can run goodtables as part of your data publishing process, either by executing the command-line tool, or using it with Python. Although this will potentially require custom development, it is the most flexible option, allowing you to specify exactly when and how the data is validated. For example, if you aggregate data from multiple sources, you could validate the unmodified data, to catch errors early, along with validating your modified data before publication. Find a detailed set of instructions [here on GitHub](https://github.com/frictionlessdata/goodtables-py/).




---
ft_img: auto-validate.png
---
required: Command-line
---
tools: Goodtables
---
sort_key: 5
